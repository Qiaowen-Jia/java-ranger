target=veritesting.tcas.tcas
classpath=${jpf-symbc}/build/examples
sourcepath=${jpf-symbc}/src/examples
symbolic.method = veritesting.tcas.tcas.sym1(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym2(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym3(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas..sym4(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym5(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym6(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas..sym7(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym8(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym9(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym10(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym)

vm.storage.class=nil
symbolic.debug=false

#listener = .symbc.SymbolicListener

jvm.insn_factory.class=gov.nasa.jpf.symbc.BranchSymInstructionFactory

#symbolic.dp=z3

symbolic.dp=z3inc
## branch coverage with unit test for JR
listener =.symbc.VeritestingListener,.symbc.VeriBranchListener,gov.nasa.jpf.symbc.sequences.VeriSymbolicSequenceListener,gov.nasa.jpf.symbc.numeric.solvers.IncrementalListener


#symbolic.optimizechoices=false

branchCoverageOn=true
targetAbsPath=${jpf-symbc}/build/examples/veritesting/tcas/tcas.class

coverageExclusions=Lveritesting/tcas/tcas.main([Ljava/lang/String)V

veritestingMode = 3
coverageMode=5
performanceMode=true
